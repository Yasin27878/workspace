package com.yili.IO;

import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.io.PrintStream;
import java.sql.PseudoColumnUsage;

/*
 * 处理流:隐藏了底层物理设备上节点流的的差异,并提供了更加方便的输入输出方法
 * 
 * 步骤:
 * 1.提供一个节点流
 * 2.封装成处理流
 * 3.直接使用处理流的io操作:间接操作底层的文件
 * 4.释放资源
 * 
 * 使用Printstream包装outputstream 字节流=节点刘
 * 
 * 
 * */

public class PrintStreamTest {
	
	public static void main(String[] args)  {
		//1.提供节点流
		FileOutputStream fos=null;
		try {
			fos = new FileOutputStream("process.txt");
		
		//2.封装处理流
		PrintStream ps=new PrintStream(fos);
		//3.直接使用处理流的io操作:间接操作底层的文件
		ps.println("处理流");
		ps.println(new PrintStreamTest());
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}finally{
			fos.close();
			ps.close();
		}
		
	}

}
